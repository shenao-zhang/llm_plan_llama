
    -----
    Starting run with the following parameters:
    Run name: ours_run_logs
    Number of trials: 10
    Number of environments: 134
    Use memory: True

    Sending all logs to `ours_run_logs`
    -----
    
Initializing AlfredTWEnv...
Checking for solvable games...
Overall we have 134 games
Evaluating with 134 games
0 / 134
using pick_cool_then_place_in_recep-Tomato-None-Microwave-10/trial_T20190909_102644_926781
You are in the middle of a room. Looking quickly around you, you see a cabinet 6, a cabinet 5, a cabinet 4, a cabinet 3, a cabinet 2, a cabinet 1, a coffeemachine 1, a countertop 3, a countertop 2, a countertop 1, a drawer 3, a drawer 2, a drawer 1, a fridge 1, a garbagecan 1, a microwave 1, a shelf 3, a shelf 2, a shelf 1, a sinkbasin 1, a stoveburner 4, a stoveburner 3, a stoveburner 2, a stoveburner 1, and a toaster 1.
Your task is to: put a cool tomato in microwave.
parent_idx 0 [('think: To solve the task, I need to find and take a tomato, then cool it with fridge, then put it in microwave.', 0.9897056932068001)]
parent_idx 0 [('go to countertop 1', 0.9972850052324272)]
parent_idx 1 [('go to countertop 1', 0.9972761296292485)]
Cumulative reward dominates!
critic: My task requires six sub-goals in order: find a tomato, take the tomato, go to a fridge, cool the tomato with fridge, go to a microwave, and put the tomato in the microwave. My current state satisfies zero of the six sub-goals. The value is 0/6=0.
0> think: To solve the task, I need to find and take a tomato, then cool it with fridge, then put it in microwave.
OK.
1> think: First I need to find a tomato. A tomato is more likely to appear in candidates=(cabinet (1-6), shelf (1-3), drawer (1-3), countertop (1-3), coffeemachine (1)). I can uniformly sample from these places without replacement by executing Python code random.sample(candidates, 1) and check one by one.
OK.
2> go to coffeemachine 1
On the coffeemachine 1, you see a mug 2.
3> go to countertop 1
Nothing happens.
parent_idx 0 [('go to countertop 2', 0.9962104032316051)]
parent_idx 0 [('think: Now I find a tomato (1). Next, I need to take it.', 0.9465493839876652), ('go to countertop 3', 0.8658607200045335)]
parent_idx 1 [('think: Now I find a tomato (1). Next, I need to take it.', 0.9397022844945062), ('go to countertop 3', 0.8840752685372755)]
Value estimation dominates!
4> go to countertop 2
On the countertop 2, you see a butterknife 1, a cellphone 1, a creditcard 1, a knife 1, a lettuce 1, a saltshaker 2, a saltshaker 1, a statue 1, and a tomato 1.
critic: Now I find a tomato (1). My current state satisfies the first of the six sub-goals: find a tomato. The value is 1/6=0.167.
5> think: Now I find a tomato (1). Next, I need to take it.
OK.
6> take tomato 1 from countertop 2
You pick up the tomato 1 from the countertop 2.
parent_idx 0 [('think: Now I take a tomato (1). Next, I need to go to a fridge (1) and cool it.', 0.9989295810563597)]
parent_idx 0 [('cool tomato 1 with fridge 1', 0.9986909807341359)]
parent_idx 1 [('cool tomato 1 with fridge 1', 0.9985408693544483)]
Value estimation dominates!
critic: Now I take a tomato (1). My current state satisfies the first two of the six sub-goals: find a tomato and take a tomato. The value is 2/6=0.333.
7> think: Now I take a tomato (1). Next, I need to go to a fridge (1) and cool it.
OK.
8> go to fridge 1
The fridge 1 is closed.
critic: Now I am at fridge (1). My current state satisfies the first three of the six sub-goals: find a tomato, take the tomato, and go to a fridge. The value is 3/6=0.5.
9> cool tomato 1 with fridge 1
You cool the tomato 1 using the fridge 1.
parent_idx 0 [('think: Now I cool the tomato. Next, I need to put it in/on microwave 1.', 0.9832023387949108)]
parent_idx 0 [('open microwave 1', 0.9357343180820584)]
parent_idx 1 [('open microwave 1', 0.9375712752757569)]
Value estimation dominates!
critic: Now I cool a tomato (1). My current state satisfies the first four of the six sub-goals: find a tomato, take the tomato, go to a fridge, and cool the tomato with fridge. The value is 4/6=0.667.
10> think: Now I cool the tomato. Next, I need to put it in/on microwave 1.
OK.
11> go to microwave 1
The microwave 1 is closed.
12> open microwave 1
You open the microwave 1. The microwave 1 is open. In it, you see a egg 1.
parent_idx 0 [('put tomato 1 in/on microwave 1', 0.9969087027132787)]
parent_idx 0 [('close microwave 1', 0.966354815608486)]
parent_idx 1 [('close microwave 1', 0.9666496256522542)]
Value estimation dominates!
critic: Now I am at microwave (1). My current state satisfies the first five of the six sub-goals: find a tomato, take the tomato, go to a fridge, cool the tomato with fridge, and go to a microwave. The value is 5/6=0.833.
13> put tomato 1 in/on microwave 1
You put the tomato 1 in/on the microwave 1.
1 / 134
using pick_clean_then_place_in_recep-Spatula-None-Drawer-10/trial_T20190907_080730_211959
You are in the middle of a room. Looking quickly around you, you see a cabinet 6, a cabinet 5, a cabinet 4, a cabinet 3, a cabinet 2, a cabinet 1, a coffeemachine 1, a countertop 3, a countertop 2, a countertop 1, a drawer 3, a drawer 2, a drawer 1, a fridge 1, a garbagecan 1, a microwave 1, a shelf 3, a shelf 2, a shelf 1, a sinkbasin 1, a stoveburner 4, a stoveburner 3, a stoveburner 2, a stoveburner 1, and a toaster 1.
Your task is to: put a clean spatula in drawer.
parent_idx 0 [('think: To solve the task, I need to find and take a spatula, then clean it with sinkbasin, then put it in drawer.', 0.977427989491745)]
parent_idx 0 [('go to stoveburner 3', 0.9922037583315884)]
parent_idx 1 [('go to stoveburner 2', 0.9983491614303432)]
Cumulative reward dominates!
critic: My task requires six sub-goals in order: find a spatula, take the spatula, go to a sinkbasin, clean the spatula with sinkbasin, go to a drawer, and put the spatula in the drawer. My current state satisfies zero of the six sub-goals. The value is 0/6=0.
0> think: To solve the task, I need to find and take a spatula, then clean it with sinkbasin, then put it in drawer.
OK.
1> think: First I need to find a spatula. A spatula is more likely to appear in candidates=(stoveburner (1-4), countertop (1-3), shelf (1-3), drawer (1-3)). I can uniformly sample from these places without replacement by executing Python code random.sample(candidates, 1) and check one by one.
OK.
2> go to stoveburner 1
On the stoveburner 1, you see a pot 1.
3> go to stoveburner 2
On the stoveburner 2, you see a pan 1.
parent_idx 0 [('go to stoveburner 3', 0.9996717204403635)]
parent_idx 0 [('go to stoveburner 4', 0.9996801422607308)]
parent_idx 1 [('go to stoveburner 4', 0.9996696734523316)]
Cumulative reward dominates!
4> go to stoveburner 3
On the stoveburner 3, you see a pot 1.
5> go to stoveburner 4
On the stoveburner 4, you see a pan 1.
parent_idx 0 [('go to countertop 1', 0.9939782079283688)]
parent_idx 0 [('go to countertop 2', 0.9997469514779794)]
parent_idx 1 [('go to countertop 2', 0.9997471414239198)]
Cumulative reward dominates!
6> go to countertop 1
On the countertop 1, you see a cellphone 2, a mug 1, and a soapbottle 1.
7> go to countertop 2
On the countertop 2, you see a butterknife 1, a glassbottle 3, a knife 1, a papertowelroll 1, a potato 1, and a statue 1.
parent_idx 0 [('go to countertop 3', 0.9998489930097035)]
parent_idx 0 [('think: Now I find a spatula (1). Next, I need to take it.', 0.9995692681359842)]
parent_idx 1 [('think: Now I find a spatula (1). Next, I need to take it.', 0.9995696691679898)]
Value estimation dominates!
8> go to countertop 3
On the countertop 3, you see a bread 1, a creditcard 1, a houseplant 1, a knife 2, a spatula 1, a spoon 1, and a statue 2.
critic: Now I find a spatula (1). My current state satisfies the first of the six sub-goals: find a spatula. The value is 1/6=0.167.
9> think: Now I find a spatula (1). Next, I need to take it.
OK.
10> take spatula 1 from countertop 3
You pick up the spatula 1 from the countertop 3.
parent_idx 0 [('think: Now I take a spatula (1). Next, I need to go to sinkbasin (1) and clean it.', 0.9997547889930275)]
parent_idx 0 [('clean spatula 1 with sinkbasin 1', 0.9998130722141316)]
parent_idx 1 [('clean spatula 1 with sinkbasin 1', 0.9998132842011871)]
Value estimation dominates!
critic: Now I take a spatula (1). My current state satisfies the first two of the six sub-goals: find a spatula and take the spatula. The value is 2/6=0.333.
11> think: Now I take a spatula (1). Next, I need to go to sinkbasin (1) and clean it.
OK.
12> go to sinkbasin 1
On the sinkbasin 1, you see a apple 1, a butterknife 2, a potato 3, and a tomato 2.
critic: Now I clean a spatula (1). My current state satisfies the first four of the six sub-goals: find a spatula, take the spatula, go to a sinkbasin, and clean the spatula with sinkbasin. The value is 4/6=0.667.
13> clean spatula 1 with sinkbasin 1
You clean the spatula 1 using the sinkbasin 1.
parent_idx 0 [('think: Now I clean a spatula (1). Next, I need to put it in/on drawer.', 0.9865291459457936), ('think: Now I clean a spatula (1). Next, I need to put it in/on drawer 1.', 0.9343028879908706)]
parent_idx 0 [('open drawer 1', 0.9997072380997978)]
parent_idx 1 [('open drawer 1', 0.9997119681591377)]
Value estimation dominates!
14> think: Now I clean a spatula (1). Next, I need to put it in/on drawer.
OK.
15> go to drawer 1
The drawer 1 is closed.
16> open drawer 1
You open the drawer 1. The drawer 1 is open. In it, you see a fork 1.
parent_idx 0 [('put spatula 1 in/on drawer 1', 0.8990552197161873), ('go to drawer 2', 0.8723273788570058)]
parent_idx 0 [('close drawer 1', 0.971916450793393)]
parent_idx 1 [('open drawer 2', 0.9998211809790274)]
Value estimation dominates!
critic: Now I am at drawer (1). My current state satisfies the first five of the six sub-goals: find a spatula, take the spatula, go to a sinkbasin, clean the spatula with sinkbasin, and go to a drawer. The value is 5/6=0.833.
17> go to drawer 2
The drawer 2 is closed.
18> open drawer 2
You open the drawer 2. The drawer 2 is open. In it, you see a peppershaker 1, and a saltshaker 1.
parent_idx 0 [('go to drawer 3', 0.9985152637376057)]
parent_idx 0 [('open drawer 3', 0.999810971907395)]
parent_idx 1 [('open drawer 3', 0.9998107325990016)]
Value estimation dominates!
19> go to drawer 3
The drawer 3 is closed.
20> open drawer 3
You open the drawer 3. The drawer 3 is open. In it, you see a cellphone 1.
parent_idx 0 [('put spatula 1 in/on drawer 3', 0.9966019593931011)]
parent_idx 0 [('close drawer 3', 0.6797887918129369)]
parent_idx 1 [('close drawer 3', 0.6798628722388961)]
Value estimation dominates!
21> put spatula 1 in/on drawer 3
You put the spatula 1 in/on the drawer 3.
2 / 134
using pick_clean_then_place_in_recep-Plate-None-CounterTop-10/trial_T20190908_213420_728917
You are in the middle of a room. Looking quickly around you, you see a cabinet 6, a cabinet 5, a cabinet 4, a cabinet 3, a cabinet 2, a cabinet 1, a coffeemachine 1, a countertop 3, a countertop 2, a countertop 1, a drawer 3, a drawer 2, a drawer 1, a fridge 1, a garbagecan 1, a microwave 1, a shelf 3, a shelf 2, a shelf 1, a sinkbasin 1, a stoveburner 4, a stoveburner 3, a stoveburner 2, a stoveburner 1, and a toaster 1.
Your task is to: put a clean plate in countertop.
parent_idx 0 [('think: To solve the task, I need to find and take a plate, then clean it with sinkbasin, then put it in countertop.', 0.9784087342590669)]
parent_idx 0 [('go to countertop 2', 0.9928447266622928)]
parent_idx 1 [('go to countertop 2', 0.9897070686295968)]
Cumulative reward dominates!
critic: My task requires six sub-goals in order: find a plate, take the plate, go to a sinkbasin, clean the plate with sinkbasin, go to a countertop, and put the plate on the countertop. My current state satisfies zero of the six sub-goals. The value is 0/6=0.
0> think: To solve the task, I need to find and take a plate, then clean it with sinkbasin, then put it in countertop.
OK.
1> think: First I need to find a plate. A plate is more likely to appear in candidates=(countertop (1-3), sinkbasin (1), fridge (1), stoveburner (1-3), cabinet (1-6)). I can uniformly sample from these places without replacement by executing Python code random.sample(candidates, 1) and check one by one.
OK.
2> go to countertop 1
On the countertop 1, you see a apple 2, a dishsponge 2, a potato 3, and a potato 2.
3> go to countertop 2
On the countertop 2, you see a bread 1, a cellphone 2, a cellphone 1, a papertowelroll 1, a plate 2, and a soapbottle 1.
parent_idx 0 [('think: Now I find a plate (2). Next, I need to take it.', 0.9915577624958117)]
parent_idx 0 [('think: Now I take a plate (2). Next, I need to go to sinkbasin (1) and clean it.', 0.9996587119388394)]
parent_idx 1 [('think: Now I take a plate (2). Next, I need to go to sinkbasin (1) and clean it.', 0.9996573756879349)]
Cumulative reward dominates!
4> think: Now I find a plate (2). Next, I need to take it.
OK.
5> take plate 2 from countertop 2
You pick up the plate 2 from the countertop 2.
critic: Now I take a plate (2). My current state satisfies the first of the six sub-goals: take the plate. The value is 1/6=0.167.
6> think: Now I take a plate (2). Next, I need to go to sinkbasin (1) and clean it.
OK.
7> go to sinkbasin 1
On the sinkbasin 1, you see nothing.
parent_idx 0 [('clean plate 2 with sinkbasin 1', 0.9958589626474942)]
parent_idx 0 [('think: Now I clean a plate (2). Next, I need to put it in/on countertop 2.', 0.9847911806175623), ('think: Now I clean a plate (2). Next, I need to put it in/on countertop 3.', 0.91351437485329)]
parent_idx 1 [('think: Now I clean a plate (2). Next, I need to put it in/on countertop 2.', 0.9849209572216018), ('think: Now I clean a plate (2). Next, I need to put it in/on countertop 3.', 0.9136466276580933)]
Value estimation dominates!
8> clean plate 2 with sinkbasin 1
You clean the plate 2 using the sinkbasin 1.
critic: Now I clean a plate (2). My current state satisfies the first two of the six sub-goals: take the plate and clean the plate with sinkbasin. The value is 2/6=0.333.
9> think: Now I clean a plate (2). Next, I need to put it in/on countertop 2.
OK.
10> go to countertop 2
On the countertop 2, you see a bread 1, a cellphone 2, a cellphone 1, a papertowelroll 1, and a soapbottle 1.
parent_idx 0 [('put plate 2 in/on countertop 2', 0.9997350499860115)]
Traceback (most recent call last):
  File "main.py", line 120, in <module>
    main(args)
  File "main.py", line 101, in main
    run_trial(trial_log_path, world_log_path, trial_idx, env_configs, args.use_memory)
  File "/Users/bytedance/Documents/new_llm/LLM_planning/alfworld_runs/alfworld_trial_wv.py", line 267, in run_trial
    final_env_history, is_success = alfworld_run(env, base_prompt, value_prompt, env_config["memory"] if use_memory else [],
  File "/Users/bytedance/Documents/new_llm/LLM_planning/alfworld_runs/alfworld_trial_wv.py", line 114, in alfworld_run
    _, response_list = llm(str(temp_history[parent_effective_start_idx]) + "\n>", stop=['\n'])
  File "/Users/bytedance/Documents/new_llm/LLM_planning/alfworld_runs/alfworld_trial_wv.py", line 77, in llm
    return response_list[0], response_list
IndexError: list index out of range
